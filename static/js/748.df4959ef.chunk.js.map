{"version":3,"file":"static/js/748.df4959ef.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx","services/movieAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Movies = styled.ul`\nlist-style: none;\ntext-align: center;\n`;\n\nexport const Movie = styled.li`\n&:not(:last-child){\n    margin-bottom: ${p => p.theme.space[3]}px;\n}\n`;\n\nexport const StyledLink = styled(Link)`\ntext-decoration: none;\nfont-size: ${p => p.theme.fontSizes.m};\ncolor:${p => p.theme.colors.primary};\nfont-weight: ${p => p.theme.fontWeights.bold};\n\n&:hover,\n&:focus{\n    color:${p => p.theme.colors.accent};\n}\n`","import { useLocation } from \"react-router-dom\"\nimport PropTypes from 'prop-types';\nimport { Movies, Movie, StyledLink } from \"./MovieList.styled\";\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <Movies>\n            {movies.map(({id, title}) => <Movie key={id}><StyledLink to={`/movies/${id}`} state={{from: location}}>{title}</StyledLink></Movie>)}\n        </Movies>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number,\n        title: PropTypes.string,\n    }))\n}\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\n\nexport const StyledForm = styled(Form)`\ntext-align: center;\nmargin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const StyledField = styled(Field)`\nwidth: 300px;\nheight: 40px;\npadding: ${p => p.theme.space[2]}px;\nborder: ${p => p.theme.borders.normal};\nborder-color: ${p => p.theme.colors.accent};\nborder-radius: ${p => p.theme.radii.normal};\nfont-size: ${p => p.theme.fontSizes.m};\noutline: none;\n`;\n\nexport const Button = styled.button`\n    height: 50px;\n    width: 70px;\n    cursor: pointer;\n    background-color: ${p => p.theme.colors.background};\n    border: none;\n    border-radius: ${p => p.theme.radii.normal};\n    font-size: ${p => p.theme.fontSizes.m};\n    padding: ${p => p.theme.space[2]}px;\n`;\n\nexport const Message = styled.p`\ncolor: red;\ntext-align: center;\nfont-size: ${p => p.theme.fontSizes.m};\n`;","import { useSearchParams } from 'react-router-dom';\nimport { ErrorMessage, Formik } from 'formik';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport * as Yup from 'yup';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieByKeyWord } from 'services/movieAPI';\nimport { Loader } from '../../components/Loader/Loader';\nimport { StyledField, StyledForm, Button, Message } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const query = searchParams.get(\"query\") ?? \"\";\n     \n    useEffect(() => {\n        const getMoviesByKeyWord = async (keyWord) => {\n            setIsLoading(true);\n            try {\n                const data = await fetchMovieByKeyWord(keyWord);\n                setMovies(data.results);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        if (query === \"\") return;\n\n        getMoviesByKeyWord(query);\n        \n    }, [query])\n\n    return (\n            <>\n                 <Formik initialValues={{ query: '' }}\n                 validationSchema={Yup.object({ query: Yup.string() })}\n                 onSubmit={({ query }, { resetForm }) => {\n                     setSearchParams({ query });\n                     resetForm();\n                 }}\n                 >\n                     <StyledForm>\n                        <StyledField name='query' type='text' placeholder=\"Enter movie's title\"/>\n                        <Button type='submit'>Search</Button>\n                        <ErrorMessage name='query' color=\"red\">Something went wrong</ErrorMessage>\n                     </StyledForm>\n                </Formik>\n                 {isLoading && <Loader />}\n                {Object.keys(movies).length > 0 && <MovieList movies={movies} />}    \n                {Object.keys(movies).length === 0 && query && <Message>There is no movie with key word ${query}</Message>}\n             </>\n    )\n}\n\nexport default MoviesPage;","import  axios from 'axios';\n\nconst API_KEY = 'dad2725b968ab7e952dfbc80999b3d08';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY}\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day`);\n        return response.data;\n    \n} catch (error) {\n        console.log(error.message);\n}\n}\n\nexport const fetchMovieByKeyWord = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        return response.data;\n    \n} catch (error) {\n        console.log(error.message);\n}\n}\n\nexport const fetchMovieById = async (movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const fetchCastById = async (movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}/credits`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const fetchReviewById = async (movieId) => {\n     try {\n        const response = await axios.get(`/movie/${movieId}/reviews`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }  \n}\n\n\n"],"names":["Movies","styled","Movie","p","theme","space","StyledLink","Link","fontSizes","m","colors","primary","fontWeights","bold","accent","MovieList","movies","location","useLocation","map","id","title","to","state","from","StyledForm","Form","StyledField","Field","borders","normal","radii","Button","background","Message","useSearchParams","searchParams","setSearchParams","useState","setMovies","isLoading","setIsLoading","query","get","useEffect","getMoviesByKeyWord","keyWord","fetchMovieByKeyWord","data","results","console","log","initialValues","validationSchema","Yup","onSubmit","resetForm","name","type","placeholder","color","Loader","Object","keys","length","axios","api_key","fetchTrendingMovies","response","message","fetchMovieById","movieId","fetchCastById","fetchReviewById"],"sourceRoot":""}