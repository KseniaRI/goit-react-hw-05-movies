{"version":3,"file":"static/js/394.c22a3ff0.chunk.js","mappings":"+QAKaA,EAAY,WACrB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,IAdAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQ,mCAAG,WAAMC,GAAN,iGAEQC,EAAAA,EAAAA,IAAeD,GAFvB,OAELE,EAFK,OAGXP,EAASO,GAHE,gDAKXC,QAAQC,IAAI,KAAMC,SALP,yDAAH,sDASjBN,EAASH,KAEP,CAACA,IAEAU,OAAOC,KAAKb,GAAOc,OAAS,EAAG,CAC/B,IAAQC,EAAuDf,EAAvDe,MAAOC,EAAgDhB,EAAhDgB,aAAcC,EAAkCjB,EAAlCiB,SAAUC,EAAwBlB,EAAxBkB,OAAQC,EAAgBnB,EAAhBmB,YACzCC,EAA2B,GAAfJ,EACZK,EAAcH,EAAOI,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,MAEzD,OACA,4BACI,gBAAKC,IAAG,yCAAoCP,GAAeQ,IAAKZ,KAChE,wBAAKA,KACL,yCAAe,4BAAOK,EAAP,WACf,sCACA,uBAAIH,KACJ,oCACA,uBAAII,SCZhB,EApByB,WAAO,IAAD,IAErBO,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACzC,OACI,iCACI,SAAC,KAAD,CAAMC,GAAIJ,EAAV,sBACA,SAAC9B,EAAD,KACA,4BACI,oDACA,SAAC,KAAD,CAAMkC,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,yBAEJ,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACI,SAAC,KAAD,W,0MCdpBC,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CAAEC,QAFV,oCAIT,IAAMC,EAAmB,mCAAG,6GAEJF,IAAAA,IAAA,uBAFI,cAErBG,EAFqB,yBAGpBA,EAAS9B,MAHW,gCAM3BC,QAAQC,IAAI,KAAMC,SANS,yDAAH,qDAUnB4B,EAAmB,mCAAG,WAAOC,GAAP,gGAEJL,IAAAA,IAAA,8BAAiCK,IAF7B,cAErBF,EAFqB,yBAGpBA,EAAS9B,MAHW,gCAM3BC,QAAQC,IAAI,KAAMC,SANS,yDAAH,sDAUnBJ,EAAc,mCAAG,WAAOL,GAAP,gGAECiC,IAAAA,IAAA,iBAAoBjC,IAFrB,cAEhBoC,EAFgB,yBAGfA,EAAS9B,MAHM,gCAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,sDASd8B,EAAa,mCAAG,WAAOvC,GAAP,gGAEEiC,IAAAA,IAAA,iBAAoBjC,EAApB,aAFF,cAEfoC,EAFe,yBAGdA,EAAS9B,MAHK,gCAKrBC,QAAQC,IAAI,KAAMC,SALG,yDAAH,sDASb+B,EAAe,mCAAG,WAAOxC,GAAP,gGAEAiC,IAAAA,IAAA,iBAAoBjC,EAApB,aAFA,cAEjBoC,EAFiB,yBAGhBA,EAAS9B,MAHO,gCAKvBC,QAAQC,IAAI,KAAMC,SALK,yDAAH","sources":["components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage.jsx","services/movieAPI.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { fetchMovieById } from \"services/movieAPI\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = () => {\n    const [movie, setMovie] = useState({});\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const getMovie = async(id) => {\n          try {\n              const data = await fetchMovieById(id);\n              setMovie(data);\n          } catch (error) {\n              console.log(error.message);\n            }\n        }  \n        \n     getMovie(movieId);\n\n    }, [movieId])\n\n    if (Object.keys(movie).length > 0) {\n        const { title, vote_average, overview, genres, poster_path } = movie;\n        const userScore = vote_average * 10;\n        const movieGenres = genres.map(genre => genre.name).join(\", \");\n\n        return (\n        <div>\n            <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n            <h2>{title}</h2>\n            <p>User score: <span>{userScore}%</span></p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{movieGenres}</p>\n        </div>\n        )\n    }\n    \n}\n \nMovieCard.propTypes = {\n    movieId: PropTypes.string,\n    movie: PropTypes.shape({\n        title: PropTypes.string,\n        vote_average: PropTypes.number,\n        overview: PropTypes.string,\n        genres: PropTypes.arrayOf(PropTypes.string),\n        poster_path: PropTypes.string,\n    })\n}\n","import { Suspense } from \"react\";\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\nimport { MovieCard } from '../components/MovieCard/MovieCard';\n\nconst MovieDetailsPage = () => {\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n        return (\n            <>\n                <Link to={backLinkHref}>Go back</Link>\n                <MovieCard />\n                <div>\n                    <h3>Additional information</h3>\n                    <Link to='cast'>Cast</Link>\n                    <Link to='reviews'>Reviews</Link>\n                </div>\n                <Suspense fallback={null}>\n                    <Outlet/>\n                </Suspense>\n                \n            </>\n        )\n}\n\nexport default MovieDetailsPage;","import  axios from 'axios';\n\nconst API_KEY = 'dad2725b968ab7e952dfbc80999b3d08';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY}\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day`);\n        return response.data;\n    \n} catch (error) {\n        console.log(error.message);\n}\n}\n\nexport const fetchMovieByKeyWord = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        return response.data;\n    \n} catch (error) {\n        console.log(error.message);\n}\n}\n\nexport const fetchMovieById = async (movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const fetchCastById = async (movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}/credits`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const fetchReviewById = async (movieId) => {\n     try {\n        const response = await axios.get(`/movie/${movieId}/reviews`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }  \n}\n\n\n"],"names":["MovieCard","useState","movie","setMovie","movieId","useParams","useEffect","getMovie","id","fetchMovieById","data","console","log","message","Object","keys","length","title","vote_average","overview","genres","poster_path","userScore","movieGenres","map","genre","name","join","src","alt","backLinkHref","useLocation","state","from","to","Suspense","fallback","axios","api_key","fetchTrendingMovies","response","fetchMovieByKeyWord","query","fetchCastById","fetchReviewById"],"sourceRoot":""}