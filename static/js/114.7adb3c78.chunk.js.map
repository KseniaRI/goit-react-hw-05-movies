{"version":3,"file":"static/js/114.7adb3c78.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/HomePage.styled.js","pages/Home/HomePage.jsx","services/movieAPI.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Movies = styled.ul`\nlist-style: none;\ntext-align: center;\n`;\n\nexport const Movie = styled.li`\n&:not(:last-child){\n    margin-bottom: ${p => p.theme.space[3]}px;\n}\n`;\n\nexport const StyledLink = styled(Link)`\ntext-decoration: none;\nfont-size: ${p => p.theme.fontSizes.m};\ncolor:${p => p.theme.colors.primary};\nfont-weight: ${p => p.theme.fontWeights.bold};\n\n&:hover,\n&:focus{\n    color:${p => p.theme.colors.accent};\n}\n`","import { useLocation } from \"react-router-dom\"\nimport PropTypes from 'prop-types';\nimport { Movies, Movie, StyledLink } from \"./MovieList.styled\";\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <Movies>\n            {movies.map(({id, title}) => <Movie key={id}><StyledLink to={`/movies/${id}`} state={{from: location}}>{title}</StyledLink></Movie>)}\n        </Movies>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number,\n        title: PropTypes.string,\n    }))\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\ncolor: ${p => p.theme.colors.secondary};\nfont-size: ${p => p.theme.fontSizes.l};\nmargin-bottom: ${p => p.theme.space[4]}px;\ntext-align:center;\n`;","import { useEffect, useState } from \"react\";\nimport { fetchTrendingMovies } from \"services/movieAPI\";\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Title } from \"./HomePage.styled\";\n\nconst HomePage = () => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const getTrendingMovies = async () => {\n             setIsLoading(true);\n           try {\n            fetchTrendingMovies().then(data => setTrendingMovies([...data.results]));\n           } catch (error) {\n               console.log(error.message);\n           } finally {\n                setIsLoading(false);\n            }\n       } \n        getTrendingMovies();\n    }, [])\n    return (\n        <>\n            <Title>Trending Today</Title>\n            {isLoading && <Loader />}\n            {trendingMovies.length > 0 && <MovieList movies={trendingMovies} />} \n        </>\n    )\n}\n\nexport default HomePage;","import  axios from 'axios';\n\nconst API_KEY = 'dad2725b968ab7e952dfbc80999b3d08';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: API_KEY}\n\nexport const fetchTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day`);\n        return response.data;\n    \n} catch (error) {\n        console.log(error.message);\n}\n}\n\nexport const fetchMovieByKeyWord = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        return response.data;\n    \n} catch (error) {\n        console.log(error.message);\n}\n}\n\nexport const fetchMovieById = async (movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const fetchCastById = async (movieId) => {\n    try {\n        const response = await axios.get(`/movie/${movieId}/credits`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const fetchReviewById = async (movieId) => {\n     try {\n        const response = await axios.get(`/movie/${movieId}/reviews`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }  \n}\n\n\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Movies","styled","Movie","p","theme","space","StyledLink","Link","fontSizes","m","colors","primary","fontWeights","bold","accent","MovieList","movies","location","useLocation","map","id","title","to","state","from","Title","secondary","l","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","fetchTrendingMovies","then","data","results","error","console","log","message","Loader","length","axios","api_key","response","fetchMovieByKeyWord","query","fetchMovieById","movieId","fetchCastById","fetchReviewById","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}